plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'dev.hyperion-systems'
version = (project.findProperty("version") ?: "0.0.1").toString()
description = 'QbitAutoPortUpdate'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springShellVersion', "3.4.1")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly
}

dependencies {
    implementation 'org.springframework.shell:spring-shell-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.shell:spring-shell-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    archiveBaseName.set('qbitautoportupdate')
}

def isRelease = providers.gradleProperty('release').map { it.toBoolean() }.orElse(false).get()
def dockerUser = System.getenv('DOCKERHUB_USERNAME')
def dockerPass = System.getenv('DOCKERHUB_TOKEN')
def dockerRepo = project.findProperty('dockerRepo') ?: System.getenv('DOCKER_REPO')

if (isRelease) {
    jib {
        from {
            image = 'eclipse-temurin:17-jre-alpine'
        }
        to {
            def targetImage = dockerRepo ? "${dockerRepo}/qbitautoportupdate:${version}" : (dockerUser ? "docker.io/${dockerUser}/qbit-auto-port-update:${version}" : "qbit-auto-port-update:${version}")
            image = targetImage
            if (dockerUser && dockerPass) {
                auth {
                    username = dockerUser
                    password = dockerPass
                }
            }
            tags = ['latest']
        }
        container {
            mainClass = 'dev.hyperionsystems.qbitautoportupdate.QbitAutoPortUpdateApplication'
            jvmFlags = ['-Dspring.shell.interactive.enabled=false']
        }
    }
    tasks.named('jib').configure { enabled = true }
} else {
    tasks.named('jib').configure { enabled = false }
}

tasks.register('releaseImage') {
    dependsOn 'jib'
}